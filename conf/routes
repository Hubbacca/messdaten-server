# Routing Devices

# Gibt eine List<Device> aller konfigurierten Devices zurueck
GET     /list                       controllers.DeviceController.list
# Gibt eine JasonNode aller konfigurierten Devices zurueck
GET     /listJson                   controllers.DeviceController.listJson
# Gibt den aktuellen Messwert des gesuchten Devices zurueck
GET     /device/value/:name         controllers.DeviceController.getMeasureValue(name: String)
# Gibt ein leeres Form mit Feldern für einen Device zurück
GET     /device/new                 controllers.DeviceController.newDeviceForm
# Gibt ein ausgefuelltes Form mit Feldern für den gesuchten Device zurück
GET     /device/update/:name        controllers.DeviceController.updateDeviceForm(name: String)
# Gibt ein ausgefuelltes Form mit Feldern für den gesuchten Device zurück
GET     /device/delete/:name        controllers.DeviceController.deleteDeviceForm(name: String)
# Speichert einen Device in der Konfiguration
POST    /device/save                controllers.DeviceController.save
# Aktualisiert einen Device in der Konfiguration
POST    /device/update              controllers.DeviceController.updateDevice
# Loescht einen Devide aus der Konfiguration
POST    /device/delete              controllers.DeviceController.deleteDevice


# An example controller showing a sample home page
GET     /                           controllers.HomeController.index
# An example controller showing how to use dependency injection
GET     /count                      controllers.CountController.count
# An example controller showing how to write asynchronous code
GET     /message                    controllers.AsyncController.message
# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
